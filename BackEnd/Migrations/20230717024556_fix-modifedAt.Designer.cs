// <auto-generated />
using System;
using BackEnd.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackEnd.Migrations
{
    [DbContext(typeof(DBTestBGContext))]
    [Migration("20230717024556_fix-modifedAt")]
    partial class fixmodifedAt
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BackEnd.DataBase.Entity.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7501),
                            Deleted = false,
                            Description = "Actor famoso de Hollywood",
                            Name = "Brad Pitt"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7510),
                            Deleted = false,
                            Description = "Actor destacado en múltiples películas",
                            Name = "Leonardo DiCaprio"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7511),
                            Deleted = false,
                            Description = "Actriz talentosa y versátil",
                            Name = "Meryl Streep"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7512),
                            Deleted = false,
                            Description = "Actor icónico de la industria cinematográfica",
                            Name = "Tom Hanks"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7512),
                            Deleted = false,
                            Description = "Actriz conocida por su papel en películas de superhéroes",
                            Name = "Scarlett Johansson"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7513),
                            Deleted = false,
                            Description = "Actor reconocido por interpretar a Iron Man",
                            Name = "Robert Downey Jr."
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7514),
                            Deleted = false,
                            Description = "Actriz ganadora de premios y reconocida por Los juegos del hambre",
                            Name = "Jennifer Lawrence"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7514),
                            Deleted = false,
                            Description = "Actor destacado en películas dramáticas",
                            Name = "Denzel Washington"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7515),
                            Deleted = false,
                            Description = "Actriz talentosa y versátil",
                            Name = "Emma Stone"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7516),
                            Deleted = false,
                            Description = "Actor conocido por su interpretación de personajes excéntricos",
                            Name = "Johnny Depp"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7516),
                            Deleted = false,
                            Description = "Actriz versátil y ganadora del premio de la Academia",
                            Name = "Anne Hathaway"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7517),
                            Deleted = false,
                            Description = "Actor australiano conocido por interpretar a Thor",
                            Name = "Chris Hemsworth"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7518),
                            Deleted = false,
                            Description = "Actriz versátil y ganadora del premio de la Academia",
                            Name = "Natalie Portman"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7518),
                            Deleted = false,
                            Description = "Actor conocido por películas como El lado bueno de las cosas",
                            Name = "Bradley Cooper"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7519),
                            Deleted = false,
                            Description = "Actriz y activista conocida por su papel en Tomb Raider",
                            Name = "Angelina Jolie"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7520),
                            Deleted = false,
                            Description = "Actordestacado en películas de acción",
                            Name = "Keanu Reeves"
                        });
                });

            modelBuilder.Entity("BackEnd.DataBase.Entity.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7615),
                            Deleted = false,
                            Description = "+18"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7616),
                            Deleted = false,
                            Description = "+21"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7617),
                            Deleted = false,
                            Description = "+12"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7617),
                            Deleted = false,
                            Description = "+9"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7618),
                            Deleted = false,
                            Description = "Todo público"
                        });
                });

            modelBuilder.Entity("BackEnd.DataBase.Entity.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7666),
                            Deleted = false,
                            Description = "Acción"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7667),
                            Deleted = false,
                            Description = "Aventura"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7668),
                            Deleted = false,
                            Description = "Comedia"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7669),
                            Deleted = false,
                            Description = "Drama"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7669),
                            Deleted = false,
                            Description = "Suspenso"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7670),
                            Deleted = false,
                            Description = "Terror"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7671),
                            Deleted = false,
                            Description = "Ciencia ficción"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7671),
                            Deleted = false,
                            Description = "Animación"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7672),
                            Deleted = false,
                            Description = "Romance"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7673),
                            Deleted = false,
                            Description = "Documental"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7674),
                            Deleted = false,
                            Description = "Fantasía"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7674),
                            Deleted = false,
                            Description = "Histórico"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7675),
                            Deleted = false,
                            Description = "Misterio"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7676),
                            Deleted = false,
                            Description = "Western"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7677),
                            Deleted = false,
                            Description = "Musical"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7678),
                            Deleted = false,
                            Description = "Deporte"
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7678),
                            Deleted = false,
                            Description = "Guerra"
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7679),
                            Deleted = false,
                            Description = "Crimen"
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7679),
                            Deleted = false,
                            Description = "Aventura espacial"
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7680),
                            Deleted = false,
                            Description = "Superhéroes"
                        });
                });

            modelBuilder.Entity("BackEnd.DataBase.Entity.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("LongDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7701),
                            Deleted = false,
                            LongDescription = "Un exasesino busca venganza después de que le roban lo más preciado que le quedaba: su perro.",
                            Name = "John Wick",
                            ShortDescription = "Un hombre en busca de justicia en un mundo de asesinos.",
                            Url = "https://example.com/john-wick.jpg"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7703),
                            Deleted = false,
                            LongDescription = "El agente Ethan Hunt se enfrenta a su misión más peligrosa hasta ahora cuando una operación sale mal y pone en peligro a millones de personas.",
                            Name = "Mission: Impossible - Fallout",
                            ShortDescription = "La misión imposible más intensa y emocionante.",
                            Url = "https://example.com/mission-impossible-fallout.jpg"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7704),
                            Deleted = false,
                            LongDescription = "Los Vengadores y sus aliados se unen para luchar contra el poderoso Thanos y evitar que obtenga las gemas del infinito y destruya el universo.",
                            Name = "Avengers: Infinity War",
                            ShortDescription = "La batalla definitiva por el destino del universo.",
                            Url = "https://example.com/avengers-infinity-war.jpg"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7705),
                            Deleted = false,
                            LongDescription = "Batman se enfrenta al Joker, un criminal psicótico que amenaza con sumir Gotham City en el caos y la anarquía.",
                            Name = "The Dark Knight",
                            ShortDescription = "El caballero oscuro contra el príncipe payaso del crimen.",
                            Url = "https://example.com/the-dark-knight.jpg"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7705),
                            Deleted = false,
                            LongDescription = "En un mundo postapocalíptico, Max Rockatansky y Furiosa se unen para",
                            Name = "Mad Max: Fury Road",
                            ShortDescription = "La película muestra una historia deslumbrante.",
                            Url = "https://example.com/mad-max-fury-road.jpg"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7707),
                            Deleted = false,
                            LongDescription = "Un policía de Nueva York se enfrenta a un grupo de terroristas en un rascacielos en Los Ángeles.",
                            Name = "Die Hard",
                            ShortDescription = "El héroe que salvará la Navidad.",
                            Url = "https://example.com/die-hard.jpg"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7707),
                            Deleted = false,
                            LongDescription = "Un cyborg asesino del futuro es enviado al pasado para matar a una mujer cuyo hijo se convertirá en la única esperanza de la humanidad contra las máquinas.",
                            Name = "The Terminator",
                            ShortDescription = "El futuro está en juego.",
                            Url = "https://example.com/the-terminator.jpg"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7708),
                            Deleted = false,
                            LongDescription = "El arqueólogo y aventurero Indiana Jones se embarca en una peligrosa misión para encontrar el Arca de la Alianza antes que los nazis.",
                            Name = "Indiana Jones: Raiders of the Lost Ark",
                            ShortDescription = "La aventura comienza.",
                            Url = "https://example.com/indiana-jones-raiders-of-the-lost-ark.jpg"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7709),
                            Deleted = false,
                            LongDescription = "Un parque temático lleno de dinosaurios vivos se convierte en una pesadilla cuando las criaturas escapan y comienzan a causar estragos.",
                            Name = "Jurassic Park",
                            ShortDescription = "La maravilla de la prehistoria en la actualidad.",
                            Url = "https://example.com/jurassic-park.jpg"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7710),
                            Deleted = false,
                            LongDescription = "Un hobbit llamado Frodo se embarca en una épica aventura para destruir un anillo mágico y salvar la Tierra Media de la oscuridad.",
                            Name = "The Lord of the Rings: The Fellowship of the Ring",
                            ShortDescription = "El comienzo de una gran guerra.",
                            Url = "https://example.com/the-lord-of-the-rings-the-fellowship-of-the-ring.jpg"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7711),
                            Deleted = false,
                            LongDescription = "El Capitán Jack Sparrow se embarca en una aventura para recuperar su barco robado y salvar a una gobernadora secuestrada de una maldición pirata.",
                            Name = "Pirates of the Caribbean: The Curse of the Black Pearl",
                            ShortDescription = "La vida de un pirata nunca ha sido tan divertida.",
                            Url = "https://example.com/pirates-of-the-caribbean-the-curse-of-the-black-pearl.jpg"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7711),
                            Deleted = false,
                            LongDescription = "Un grupo de amigos se embarca en una aventura en busca de un tesoro perdido para salvar sus hogares de ser demolidos.",
                            Name = "The Goonies",
                            ShortDescription = "La pandilla más divertida en busca de aventuras.",
                            Url = "https://example.com/the-goonies.jpg"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7712),
                            Deleted = false,
                            LongDescription = "Un aventurero y una arqueóloga luchan contra una antigua maldición y enfrentan criaturas sobrenaturales mientras intentan salvar al mundo.",
                            Name = "The Mummy",
                            ShortDescription = "La aventura más emocionante en Egipto.",
                            Url = "https://example.com/the-mummy.jpg"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7713),
                            Deleted = false,
                            LongDescription = "Una niña es poseída por una entidad demoníaca y un sacerdote lucha por salvar su alma.",
                            Name = "The Exorcist",
                            ShortDescription = "El clásico del terror que te hará temblar.",
                            Url = "https://example.com/the-exorcist.jpg"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7715),
                            Deleted = false,
                            LongDescription = "Un escritor y su familia se mudan a un hotel aislado donde ocurren sucesos aterradores.",
                            Name = "The Shining",
                            ShortDescription = "Una historia de terror psicológico que te mantendrá en vilo.",
                            Url = "https://example.com/the-shining.jpg"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7715),
                            Deleted = false,
                            LongDescription = "Un asesino enmascarado aterroriza a una pequeña ciudad en la noche de Halloween.",
                            Name = "Halloween",
                            ShortDescription = "Un clásico del cine slasher que te hará saltar de miedo.",
                            Url = "https://example.com/halloween.jpg"
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7716),
                            Deleted = false,
                            LongDescription = "Un grupo de adolescentes es perseguido en sus sueños por un asesino de pesadilla.",
                            Name = "A Nightmare on Elm Street",
                            ShortDescription = "No podrás dormir tranquilo después de ver esta película.",
                            Url = "https://example.com/nightmare-on-elm-street.jpg"
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7717),
                            Deleted = false,
                            LongDescription = "Una pareja de investigadores paranormales ayuda a una familia a enfrentarse a una presencia malévola en su casa.",
                            Name = "The Conjuring",
                            ShortDescription = "Una historia basada en hechos reales que te dejará sin aliento.",
                            Url = "https://example.com/the-conjuring.jpg"
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7718),
                            Deleted = false,
                            LongDescription = "Un grupo de niños se enfrenta a un aterrador payaso que aterroriza su ciudad.",
                            Name = "It",
                            ShortDescription = "El regreso del payaso más aterrador del cine.",
                            Url = "https://example.com/it.jpg"
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7718),
                            Deleted = false,
                            LongDescription = "Un joven negro visita la casa de la familia de su novia blanca y descubre un oscuro secreto.",
                            Name = "Get Out",
                            ShortDescription = "Un thriller psicológico que te mantendrá en vilo hasta el final.",
                            Url = "https://example.com/get-out.jpg"
                        });
                });

            modelBuilder.Entity("BackEnd.DataBase.Entity.MovieActor", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("MovieId", "ActorId");

                    b.HasIndex("ActorId");

                    b.ToTable("MovieActors");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            ActorId = 16,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7806),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 2,
                            ActorId = 16,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7807),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 3,
                            ActorId = 16,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7808),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 4,
                            ActorId = 16,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7809),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 5,
                            ActorId = 16,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7809),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 6,
                            ActorId = 16,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7810),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 7,
                            ActorId = 16,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7811),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 8,
                            ActorId = 16,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7811),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 9,
                            ActorId = 16,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7812),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 10,
                            ActorId = 16,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7813),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 11,
                            ActorId = 16,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7813),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 12,
                            ActorId = 16,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7814),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 13,
                            ActorId = 16,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7815),
                            Deleted = false
                        });
                });

            modelBuilder.Entity("BackEnd.DataBase.Entity.MovieCategory", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("MovieId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("MovieCategories");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7755),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 2,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7756),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 3,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7757),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 4,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7758),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 5,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7758),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 6,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7759),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 7,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7759),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 8,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7760),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 9,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7761),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 10,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7761),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 11,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7762),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 12,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7762),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 13,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7763),
                            Deleted = false
                        });
                });

            modelBuilder.Entity("BackEnd.DataBase.Entity.MovieGenre", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("MovieId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("MovieGenres");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            GenreId = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7736),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 2,
                            GenreId = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7737),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 3,
                            GenreId = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7737),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 4,
                            GenreId = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7738),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 5,
                            GenreId = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7739),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 6,
                            GenreId = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7739),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 7,
                            GenreId = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7740),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 8,
                            GenreId = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7740),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 9,
                            GenreId = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7741),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 10,
                            GenreId = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7742),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 11,
                            GenreId = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7742),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 12,
                            GenreId = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7743),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 13,
                            GenreId = 1,
                            CreatedAt = new DateTime(2023, 7, 16, 21, 45, 55, 850, DateTimeKind.Local).AddTicks(7743),
                            Deleted = false
                        });
                });

            modelBuilder.Entity("BackEnd.DataBase.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Names")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BackEnd.DataBase.Entity.MovieActor", b =>
                {
                    b.HasOne("BackEnd.DataBase.Entity.Actor", "Actor")
                        .WithMany()
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd.DataBase.Entity.Movie", "Movie")
                        .WithMany("MovieActors")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("BackEnd.DataBase.Entity.MovieCategory", b =>
                {
                    b.HasOne("BackEnd.DataBase.Entity.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd.DataBase.Entity.Movie", "Movie")
                        .WithMany("MovieCategories")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("BackEnd.DataBase.Entity.MovieGenre", b =>
                {
                    b.HasOne("BackEnd.DataBase.Entity.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd.DataBase.Entity.Movie", "Movie")
                        .WithMany("MovieGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("BackEnd.DataBase.Entity.Movie", b =>
                {
                    b.Navigation("MovieActors");

                    b.Navigation("MovieCategories");

                    b.Navigation("MovieGenres");
                });
#pragma warning restore 612, 618
        }
    }
}
