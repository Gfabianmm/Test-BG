// <auto-generated />
using System;
using BackEnd.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackEnd.Migrations
{
    [DbContext(typeof(DBTestBGContext))]
    [Migration("20230717110132_update-url")]
    partial class updateurl
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BackEnd.DataBase.Entity.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9425),
                            Deleted = false,
                            Description = "Actor famoso de Hollywood",
                            Name = "Brad Pitt"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9435),
                            Deleted = false,
                            Description = "Actor destacado en múltiples películas",
                            Name = "Leonardo DiCaprio"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9436),
                            Deleted = false,
                            Description = "Actriz talentosa y versátil",
                            Name = "Meryl Streep"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9437),
                            Deleted = false,
                            Description = "Actor icónico de la industria cinematográfica",
                            Name = "Tom Hanks"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9437),
                            Deleted = false,
                            Description = "Actriz conocida por su papel en películas de superhéroes",
                            Name = "Scarlett Johansson"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9438),
                            Deleted = false,
                            Description = "Actor reconocido por interpretar a Iron Man",
                            Name = "Robert Downey Jr."
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9439),
                            Deleted = false,
                            Description = "Actriz ganadora de premios y reconocida por Los juegos del hambre",
                            Name = "Jennifer Lawrence"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9440),
                            Deleted = false,
                            Description = "Actor destacado en películas dramáticas",
                            Name = "Denzel Washington"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9441),
                            Deleted = false,
                            Description = "Actriz talentosa y versátil",
                            Name = "Emma Stone"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9441),
                            Deleted = false,
                            Description = "Actor conocido por su interpretación de personajes excéntricos",
                            Name = "Johnny Depp"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9442),
                            Deleted = false,
                            Description = "Actriz versátil y ganadora del premio de la Academia",
                            Name = "Anne Hathaway"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9443),
                            Deleted = false,
                            Description = "Actor australiano conocido por interpretar a Thor",
                            Name = "Chris Hemsworth"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9443),
                            Deleted = false,
                            Description = "Actriz versátil y ganadora del premio de la Academia",
                            Name = "Natalie Portman"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9444),
                            Deleted = false,
                            Description = "Actor conocido por películas como El lado bueno de las cosas",
                            Name = "Bradley Cooper"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9445),
                            Deleted = false,
                            Description = "Actriz y activista conocida por su papel en Tomb Raider",
                            Name = "Angelina Jolie"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9446),
                            Deleted = false,
                            Description = "Actordestacado en películas de acción",
                            Name = "Keanu Reeves"
                        });
                });

            modelBuilder.Entity("BackEnd.DataBase.Entity.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9549),
                            Deleted = false,
                            Description = "+18"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9551),
                            Deleted = false,
                            Description = "+21"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9552),
                            Deleted = false,
                            Description = "+12"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9552),
                            Deleted = false,
                            Description = "+9"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9553),
                            Deleted = false,
                            Description = "Todo público"
                        });
                });

            modelBuilder.Entity("BackEnd.DataBase.Entity.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9566),
                            Deleted = false,
                            Description = "Acción"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9567),
                            Deleted = false,
                            Description = "Aventura"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9568),
                            Deleted = false,
                            Description = "Comedia"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9569),
                            Deleted = false,
                            Description = "Drama"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9569),
                            Deleted = false,
                            Description = "Suspenso"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9570),
                            Deleted = false,
                            Description = "Terror"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9571),
                            Deleted = false,
                            Description = "Ciencia ficción"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9572),
                            Deleted = false,
                            Description = "Animación"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9572),
                            Deleted = false,
                            Description = "Romance"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9573),
                            Deleted = false,
                            Description = "Documental"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9573),
                            Deleted = false,
                            Description = "Fantasía"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9574),
                            Deleted = false,
                            Description = "Histórico"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9575),
                            Deleted = false,
                            Description = "Misterio"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9575),
                            Deleted = false,
                            Description = "Western"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9576),
                            Deleted = false,
                            Description = "Musical"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9577),
                            Deleted = false,
                            Description = "Deporte"
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9577),
                            Deleted = false,
                            Description = "Guerra"
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9578),
                            Deleted = false,
                            Description = "Crimen"
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9579),
                            Deleted = false,
                            Description = "Aventura espacial"
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9579),
                            Deleted = false,
                            Description = "Superhéroes"
                        });
                });

            modelBuilder.Entity("BackEnd.DataBase.Entity.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("LongDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9596),
                            Deleted = false,
                            LongDescription = "Un exasesino busca venganza después de que le roban lo más preciado que le quedaba: su perro.",
                            Name = "John Wick",
                            ShortDescription = "Un hombre en busca de justicia en un mundo de asesinos.",
                            Url = "https://sm.ign.com/ign_es/movie/j/john-wick-/john-wick-4_htag.jpg"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9597),
                            Deleted = false,
                            LongDescription = "El agente Ethan Hunt se enfrenta a su misión más peligrosa hasta ahora cuando una operación sale mal y pone en peligro a millones de personas.",
                            Name = "Mission: Impossible - Fallout",
                            ShortDescription = "La misión imposible más intensa y emocionante.",
                            Url = "https://images-na.ssl-images-amazon.com/images/S/pv-target-images/724e9ee2cb3f3ac351566d0d82daa14e086b2f4ec9436d7274454198e5f2751b._RI_TTW_.jpg"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9598),
                            Deleted = false,
                            LongDescription = "Los Vengadores y sus aliados se unen para luchar contra el poderoso Thanos y evitar que obtenga las gemas del infinito y destruya el universo.",
                            Name = "Avengers: Infinity War",
                            ShortDescription = "La batalla definitiva por el destino del universo.",
                            Url = "https://www.cinemascomics.com/wp-content/uploads/2018/04/poster-imax-vengadores-infinity-war.jpg"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9599),
                            Deleted = false,
                            LongDescription = "Batman se enfrenta al Joker, un criminal psicótico que amenaza con sumir Gotham City en el caos y la anarquía.",
                            Name = "The Dark Knight",
                            ShortDescription = "El caballero oscuro contra el príncipe payaso del crimen.",
                            Url = "https://static.wikia.nocookie.net/batman/images/4/4b/Espanol_3584-1-.jpg/revision/latest?cb=20141102170439&path-prefix=es"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9600),
                            Deleted = false,
                            LongDescription = "En un mundo postapocalíptico, Max Rockatansky y Furiosa se unen para",
                            Name = "Mad Max: Fury Road",
                            ShortDescription = "La película muestra una historia deslumbrante.",
                            Url = "https://www.dodmagazine.es/wp-content/uploads/2015/05/mad-max-fury-road.jpg"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9604),
                            Deleted = false,
                            LongDescription = "Un policía de Nueva York se enfrenta a un grupo de terroristas en un rascacielos en Los Ángeles.",
                            Name = "Die Hard",
                            ShortDescription = "El héroe que salvará la Navidad.",
                            Url = "https://c8.alamy.com/compes/dtgr78/poster-de-pelicula-de-die-hard-pelicula-de-accion-estadounidense-de-1988-dirigida-por-john-mctiernan-protagonizada-por-bruce-willis-dtgr78.jpg"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9605),
                            Deleted = false,
                            LongDescription = "Un cyborg asesino del futuro es enviado al pasado para matar a una mujer cuyo hijo se convertirá en la única esperanza de la humanidad contra las máquinas.",
                            Name = "The Terminator",
                            ShortDescription = "El futuro está en juego.",
                            Url = "https://cl.buscafs.com/www.tomatazos.com/public/uploads/images/23865/23865_400x600.jpg"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9606),
                            Deleted = false,
                            LongDescription = "El arqueólogo y aventurero Indiana Jones se embarca en una peligrosa misión para encontrar el Arca de la Alianza antes que los nazis.",
                            Name = "Indiana Jones: Raiders of the Lost Ark",
                            ShortDescription = "La aventura comienza.",
                            Url = "https://m.media-amazon.com/images/I/81UOBSDQh0L._AC_UF894,1000_QL80_.jpg"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9607),
                            Deleted = false,
                            LongDescription = "Un parque temático lleno de dinosaurios vivos se convierte en una pesadilla cuando las criaturas escapan y comienzan a causar estragos.",
                            Name = "Jurassic Park",
                            ShortDescription = "La maravilla de la prehistoria en la actualidad.",
                            Url = "https://i.pinimg.com/originals/a8/a7/70/a8a7702721817c8289afefe6a8db969f.jpg"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9608),
                            Deleted = false,
                            LongDescription = "Un hobbit llamado Frodo se embarca en una épica aventura para destruir un anillo mágico y salvar la Tierra Media de la oscuridad.",
                            Name = "The Lord of the Rings: The Fellowship of the Ring",
                            ShortDescription = "El comienzo de una gran guerra.",
                            Url = "https://musicart.xboxlive.com/7/e88d5100-0000-0000-0000-000000000002/504/image.jpg?w=1920&h=1080"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9608),
                            Deleted = false,
                            LongDescription = "El Capitán Jack Sparrow se embarca en una aventura para recuperar su barco robado y salvar a una gobernadora secuestrada de una maldición pirata.",
                            Name = "Pirates of the Caribbean: The Curse of the Black Pearl",
                            ShortDescription = "La vida de un pirata nunca ha sido tan divertida.",
                            Url = "https://basededatos.atrae.org/media/works/z8onk7LV9Mmw6zKz4hT6pzzvmvl.jpg"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9609),
                            Deleted = false,
                            LongDescription = "Un grupo de amigos se embarca en una aventura en busca de un tesoro perdido para salvar sus hogares de ser demolidos.",
                            Name = "The Goonies",
                            ShortDescription = "La pandilla más divertida en busca de aventuras.",
                            Url = "https://r1.abcimg.es/resizer/resizer.php?imagen=https%3A%2F%2Fs3.abcstatics.com%2Fmedia%2Fpeliculas%2F000%2F004%2F490%2Flos-goonies-1.jpg&nuevoancho=683&medio=abc"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9610),
                            Deleted = false,
                            LongDescription = "Un aventurero y una arqueóloga luchan contra una antigua maldición y enfrentan criaturas sobrenaturales mientras intentan salvar al mundo.",
                            Name = "The Mummy",
                            ShortDescription = "La aventura más emocionante en Egipto.",
                            Url = "https://i.etsystatic.com/22147411/r/il/ba2a32/3850948924/il_570xN.3850948924_j1eq.jpg"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9611),
                            Deleted = false,
                            LongDescription = "Una niña es poseída por una entidad demoníaca y un sacerdote lucha por salvar su alma.",
                            Name = "The Exorcist",
                            ShortDescription = "El clásico del terror que te hará temblar.",
                            Url = "https://cdn.kobo.com/book-images/f9ab8287-7c5d-4650-9c92-371260037e85/1200/1200/False/leyendas-de-terror.jpg"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9612),
                            Deleted = false,
                            LongDescription = "Un escritor y su familia se mudan a un hotel aislado donde ocurren sucesos aterradores.",
                            Name = "The Shining",
                            ShortDescription = "Una historia de terror psicológico que te mantendrá en vilo.",
                            Url = "https://hips.hearstapps.com/es.h-cdn.co/fotoes/images/cinefilia/mejores-posters-cine-terror-miedo/mv5bntc4odm2mtu2nf5bml5banbnxkftztgwntezntmynje-._v1_sy1000_cr0-0-647-1000_al_/137670471-1-esl-ES/MV5BNTc4ODM2MTU2NF5BMl5BanBnXkFtZTgwNTEzNTMyNjE-._V1_SY1000_CR0-0-647-1000_AL_.jpg"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9612),
                            Deleted = false,
                            LongDescription = "Un asesino enmascarado aterroriza a una pequeña ciudad en la noche de Halloween.",
                            Name = "Halloween",
                            ShortDescription = "Un clásico del cine slasher que te hará saltar de miedo.",
                            Url = "https://cdn.kobo.com/book-images/f9ab8287-7c5d-4650-9c92-371260037e85/1200/1200/False/leyendas-de-terror.jpg"
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9613),
                            Deleted = false,
                            LongDescription = "Un grupo de adolescentes es perseguido en sus sueños por un asesino de pesadilla.",
                            Name = "A Nightmare on Elm Street",
                            ShortDescription = "No podrás dormir tranquilo después de ver esta película.",
                            Url = "https://hips.hearstapps.com/es.h-cdn.co/fotoes/images/cinefilia/mejores-posters-cine-terror-miedo/mv5bntc4odm2mtu2nf5bml5banbnxkftztgwntezntmynje-._v1_sy1000_cr0-0-647-1000_al_/137670471-1-esl-ES/MV5BNTc4ODM2MTU2NF5BMl5BanBnXkFtZTgwNTEzNTMyNjE-._V1_SY1000_CR0-0-647-1000_AL_.jpg"
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9614),
                            Deleted = false,
                            LongDescription = "Una pareja de investigadores paranormales ayuda a una familia a enfrentarse a una presencia malévola en su casa.",
                            Name = "The Conjuring",
                            ShortDescription = "Una historia basada en hechos reales que te dejará sin aliento.",
                            Url = "https://img2.rtve.es/imagenes/portada-tales-from-the-crypt/1625668471937.jpg"
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9615),
                            Deleted = false,
                            LongDescription = "Un grupo de niños se enfrenta a un aterrador payaso que aterroriza su ciudad.",
                            Name = "It",
                            ShortDescription = "El regreso del payaso más aterrador del cine.",
                            Url = "https://hips.hearstapps.com/es.h-cdn.co/fotoes/images/cinefilia/mejores-posters-cine-terror-miedo/mv5bntc4odm2mtu2nf5bml5banbnxkftztgwntezntmynje-._v1_sy1000_cr0-0-647-1000_al_/137670471-1-esl-ES/MV5BNTc4ODM2MTU2NF5BMl5BanBnXkFtZTgwNTEzNTMyNjE-._V1_SY1000_CR0-0-647-1000_AL_.jpg"
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9616),
                            Deleted = false,
                            LongDescription = "Un joven negro visita la casa de la familia de su novia blanca y descubre un oscuro secreto.",
                            Name = "Get Out",
                            ShortDescription = "Un thriller psicológico que te mantendrá en vilo hasta el final.",
                            Url = "https://img2.rtve.es/imagenes/portada-tales-from-the-crypt/1625668471937.jpg"
                        });
                });

            modelBuilder.Entity("BackEnd.DataBase.Entity.MovieActor", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("MovieId", "ActorId");

                    b.HasIndex("ActorId");

                    b.ToTable("MovieActors");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            ActorId = 16,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9742),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 2,
                            ActorId = 2,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9743),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 3,
                            ActorId = 4,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9743),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 4,
                            ActorId = 6,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9744),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 5,
                            ActorId = 7,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9745),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 6,
                            ActorId = 8,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9745),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 7,
                            ActorId = 9,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9746),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 8,
                            ActorId = 10,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9747),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 9,
                            ActorId = 11,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9747),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 10,
                            ActorId = 3,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9748),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 11,
                            ActorId = 12,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9748),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 12,
                            ActorId = 6,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9749),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 13,
                            ActorId = 15,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9750),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 14,
                            ActorId = 14,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9750),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 15,
                            ActorId = 11,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9751),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 16,
                            ActorId = 8,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9752),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 17,
                            ActorId = 9,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9752),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 18,
                            ActorId = 13,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9753),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 19,
                            ActorId = 5,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9753),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 20,
                            ActorId = 6,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9754),
                            Deleted = false
                        });
                });

            modelBuilder.Entity("BackEnd.DataBase.Entity.MovieCategory", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("MovieId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("MovieCategories");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9710),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 2,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9711),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 3,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9711),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 4,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9712),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 5,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9713),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 6,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9713),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 7,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9714),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 8,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9715),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 9,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9716),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 10,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9717),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 11,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9717),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 12,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9718),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 13,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9718),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 14,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9719),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 15,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9720),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 16,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9722),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 17,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9723),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 18,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9723),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 19,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9724),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 20,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9724),
                            Deleted = false
                        });
                });

            modelBuilder.Entity("BackEnd.DataBase.Entity.MovieGenre", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("MovieId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("MovieGenres");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            GenreId = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9679),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 2,
                            GenreId = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9680),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 3,
                            GenreId = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9684),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 4,
                            GenreId = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9685),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 5,
                            GenreId = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9686),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 6,
                            GenreId = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9687),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 7,
                            GenreId = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9687),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 8,
                            GenreId = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9688),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 9,
                            GenreId = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9689),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 10,
                            GenreId = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9689),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 11,
                            GenreId = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9690),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 12,
                            GenreId = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9691),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 13,
                            GenreId = 1,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9691),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 14,
                            GenreId = 6,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9692),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 15,
                            GenreId = 6,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9693),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 16,
                            GenreId = 6,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9693),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 17,
                            GenreId = 6,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9694),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 18,
                            GenreId = 6,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9695),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 19,
                            GenreId = 6,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9695),
                            Deleted = false
                        },
                        new
                        {
                            MovieId = 20,
                            GenreId = 6,
                            CreatedAt = new DateTime(2023, 7, 17, 6, 1, 31, 979, DateTimeKind.Local).AddTicks(9696),
                            Deleted = false
                        });
                });

            modelBuilder.Entity("BackEnd.DataBase.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Names")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BackEnd.DataBase.Entity.MovieActor", b =>
                {
                    b.HasOne("BackEnd.DataBase.Entity.Actor", "Actor")
                        .WithMany()
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd.DataBase.Entity.Movie", "Movie")
                        .WithMany("MovieActors")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("BackEnd.DataBase.Entity.MovieCategory", b =>
                {
                    b.HasOne("BackEnd.DataBase.Entity.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd.DataBase.Entity.Movie", "Movie")
                        .WithMany("MovieCategories")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("BackEnd.DataBase.Entity.MovieGenre", b =>
                {
                    b.HasOne("BackEnd.DataBase.Entity.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd.DataBase.Entity.Movie", "Movie")
                        .WithMany("MovieGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("BackEnd.DataBase.Entity.Movie", b =>
                {
                    b.Navigation("MovieActors");

                    b.Navigation("MovieCategories");

                    b.Navigation("MovieGenres");
                });
#pragma warning restore 612, 618
        }
    }
}
